Default Controller

=====================
perhatian file ini :

1. C:\xampp\htdocs\CodeIgniter\application\config\routes.php
2. C:\xampp\htdocs\CodeIgniter\application\controllers\Welcome.php
3. C:\xampp\htdocs\CodeIgniter\application\views\welcome_message.php

=======================

testing ada 1 exmple  : 

link nya : 

http://localhost/CodeIgniter/


yg di di ubah ADA 3 FILE : 

1. C:\xampp\htdocs\CodeIgniter\application\config\routes.php
2. C:\xampp\htdocs\CodeIgniter\application\controllers\Blog.php
3. C:\xampp\htdocs\CodeIgniter\application\views\blog.php

1. code nya : \application\config\routes.php

<?php
defined('BASEPATH') or exit('No direct script access allowed');

/*
| -------------------------------------------------------------------------
| URI ROUTING
| -------------------------------------------------------------------------
| This file lets you re-map URI requests to specific controller functions.
|
| Typically there is a one-to-one relationship between a URL string
| and its corresponding controller class/method. The segments in a
| URL normally follow this pattern:
|
|	example.com/class/method/id/
|
| In some instances, however, you may want to remap this relationship
| so that a different class/function is called than the one
| corresponding to the URL.
|
| Please see the user guide for complete details:
|
|	https://codeigniter.com/userguide3/general/routing.html
|
| -------------------------------------------------------------------------
| RESERVED ROUTES
| -------------------------------------------------------------------------
|
| There are three reserved routes:
|
|	$route['default_controller'] = 'welcome';
|
| This route indicates which controller class should be loaded if the
| URI contains no data. In the above example, the "welcome" class
| would be loaded.
|
|	$route['404_override'] = 'errors/page_missing';
|
| This route will tell the Router which controller/method to use if those
| provided in the URL cannot be matched to a valid route.
|
|	$route['translate_uri_dashes'] = FALSE;
|
| This is not exactly a route, but allows you to automatically route
| controller and method names that contain dashes. '-' isn't a valid
| class or method name character, so it requires translation.
| When you set this option to TRUE, it will replace ALL dashes in the
| controller and method URI segments.
|
| Examples:	my-controller/index	-> my_controller/index
|		my-controller/my-method	-> my_controller/my_method
*/
$route['default_controller'] = 'blog';
$route['404_override'] = '';
$route['translate_uri_dashes'] = FALSE;


============================

2. CODE NYA : \application\controllers\Blog.php

<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Blog extends CI_Controller
{

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/userguide3/general/urls.html
	 */
	public function index()
	{

		$data['blogs'] = [
			[
				'title' => 'Artikel Pertama',
				'content' => '<p>Lorem Ipsum is simply dummy text of the printing and 	
				 typesetting industry.</p>'
			],
			[
				'title' => 'Artikel Kedua',
				'content' => '<p>Lorem Ipsum has been the industrys standard dummy 
				 text ever since the 1500s, when an unknown printer took a galley of type 
				 and scrambled it to make a type specimen book.</p>'
			],
			[
				'title' => 'Artikel Ketiga',
				'content' => '<p>Lorem Ipsum is simply dummy text of the printing and 	
				 typesetting industry. Lorem Ipsum has been the industrys standard dummy 
				 text ever since the 1500s.</p>'
			]
		];
		$this->load->helper('url');
		$this->load->view('blog', $data);
	}
	public function listdata()
	{
		$this->load->view('list_data');
	}
	public function detail()
	{
		$this->load->view('detail_blog');
	}
}


================================================


3. CodeIgniter\application\views\blog.php

code nya view :

<html>

<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>

<body>
	<h1>Artikel Terbaru</h1>
	<?php foreach ($blogs as $key => $blog): ?>
		<div class="blog">
			<h2><?php echo $blog['title']; ?></h2>
			<?php echo $blog['content'];
	endforeach;
	?>
</body>

</html>

======================================

