Akses Database

=====================
perhatian file ini :

1. C:\xampp\htdocs\CodeIgniter\application\config\routes.php
2. C:\xampp\htdocs\CodeIgniter\application\controllers\Welcome.php
3. C:\xampp\htdocs\CodeIgniter\application\views\welcome_message.php

=======================

testing ada 1 exmple  : 

link nya : 

http://localhost/CodeIgniter/


yg di di ubah ADA 4 FILE : 

1. buat database
2. C:\xampp\htdocs\CodeIgniter\application\controllers\Blog.php
3. C:\xampp\htdocs\CodeIgniter\application\views\blog.php
4. C:\xampp\htdocs\CodeIgniter\application\config\database.php

1. code nya : Buat DataBase 

	* mysql -u root
	* CREATE DATABASE blog_db;
	* CREATE TABLE `blog_posts` (
		  `id` int(11) NOT NULL AUTO_INCREMENT,
 		  `title` varchar(255) NOT NULL,
  		  `content` text NOT NULL,
  		  `url` varchar(255) NOT NULL,
  		  `cover` varchar(255) NOT NULL,
  		  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  		PRIMARY KEY (`id`)
	   ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
	* SELECT * FROM `blog_posts`;

	* DATA NYA :

		INSERT INTO `blog_posts` (`title`, `content`, `url`, `cover`) VALUES
('Mengenal Teknologi Terbaru', 'Artikel ini membahas perkembangan teknologi terkini yang dapat membantu meningkatkan produktivitas.', 'mengenal-teknologi-terbaru', 'teknologi-terbaru.jpg'),
('Tips Memulai Bisnis Online', 'Beberapa tips yang dapat Anda terapkan untuk memulai bisnis online yang sukses.', 'tips-memulai-bisnis-online', 'bisnis-online.jpg'),
('Resep Masakan Tradisional', 'Artikel ini menyajikan beberapa resep masakan tradisional yang lezat dan mudah dibuat.', 'resep-masakan-tradisional', 'masakan-tradisional.jpg'),
('Sejarah Peradaban Kuno', 'Artikel ini menceritakan tentang peradaban kuno yang menarik dan berpengaruh hingga saat ini.', 'sejarah-peradaban-kuno', 'peradaban-kuno.jpg'),
('Tips Hidup Sehat Alami', 'Beberapa tips sederhana untuk menjalani gaya hidup sehat secara alami.', 'tips-hidup-sehat-alami', 'hidup-sehat.jpg');


================================================

data yg di ubah  
2. C:\xampp\htdocs\CodeIgniter\application\controllers\Blog.php

code nya :

<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Blog extends CI_Controller
{
	protected $dbPHP;

	public function __construct()
	{
		parent::__construct();
		$this->load->database();
		$this->dbPHP = $this->db;
	}

	public function index()
	{
		$data['blogs'] = $this->dbPHP->get('blog_posts')->result_array();
		$this->load->view('blog', $data);
	}

	public function listdata()
	{
		$this->load->view('list_data');
	}

	public function detail($id)
	{
		$data['blog'] = $this->dbPHP->get_where('blog_posts', ['id' => $id])->row_array();
		$this->load->view('detail_blog', $data);
	}
}


=====================================

3. C:\xampp\htdocs\CodeIgniter\application\views\blog.php

code nya di ubah :

<html>

<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>

<body>
	<h1>Artikel Terbaru</h1>
	<?php
	foreach ($blogs as $key => $blog) {
		?>
		<div class="blog">
			<h2><?php echo $blog['title']; ?></h2>
			<?php echo $blog['content']; ?>
		</div>
		<?php
	}
	?>
</body>

</html>

===================================

4. C:\xampp\htdocs\CodeIgniter\application\config\database.php

yg di ubah code nya : 

<?php
defined('BASEPATH') or exit('No direct script access allowed');

/*
| -------------------------------------------------------------------
| DATABASE CONNECTIVITY SETTINGS
| -------------------------------------------------------------------
| This file will contain the settings needed to access your database.
|
| For complete instructions please consult the 'Database Connection'
| page of the User Guide.
|
| -------------------------------------------------------------------
| EXPLANATION OF VARIABLES
| -------------------------------------------------------------------
|
|	['dsn']      The full DSN string describe a connection to the database.
|	['hostname'] The hostname of your database server.
|	['username'] The username used to connect to the database
|	['password'] The password used to connect to the database
|	['database'] The name of the database you want to connect to
|	['dbdriver'] The database driver. e.g.: mysqli.
|			Currently supported:
|				 cubrid, ibase, mssql, mysql, mysqli, oci8,
|				 odbc, pdo, postgre, sqlite, sqlite3, sqlsrv
|	['dbprefix'] You can add an optional prefix, which will be added
|				 to the table name when using the  Query Builder class
|	['pconnect'] TRUE/FALSE - Whether to use a persistent connection
|	['db_debug'] TRUE/FALSE - Whether database errors should be displayed.
|	['cache_on'] TRUE/FALSE - Enables/disables query caching
|	['cachedir'] The path to the folder where cache files should be stored
|	['char_set'] The character set used in communicating with the database
|	['dbcollat'] The character collation used in communicating with the database
|				 NOTE: For MySQL and MySQLi databases, this setting is only used
| 				 as a backup if your server is running PHP < 5.2.3 or MySQL < 5.0.7
|				 (and in table creation queries made with DB Forge).
| 				 There is an incompatibility in PHP with mysql_real_escape_string() which
| 				 can make your site vulnerable to SQL injection if you are using a
| 				 multi-byte character set and are running versions lower than these.
| 				 Sites using Latin-1 or UTF-8 database character set and collation are unaffected.
|	['swap_pre'] A default table prefix that should be swapped with the dbprefix
|	['encrypt']  Whether or not to use an encrypted connection.
|
|			'mysql' (deprecated), 'sqlsrv' and 'pdo/sqlsrv' drivers accept TRUE/FALSE
|			'mysqli' and 'pdo/mysql' drivers accept an array with the following options:
|
|				'ssl_key'    - Path to the private key file
|				'ssl_cert'   - Path to the public key certificate file
|				'ssl_ca'     - Path to the certificate authority file
|				'ssl_capath' - Path to a directory containing trusted CA certificates in PEM format
|				'ssl_cipher' - List of *allowed* ciphers to be used for the encryption, separated by colons (':')
|				'ssl_verify' - TRUE/FALSE; Whether verify the server certificate or not
|
|	['compress'] Whether or not to use client compression (MySQL only)
|	['stricton'] TRUE/FALSE - forces 'Strict Mode' connections
|							- good for ensuring strict SQL while developing
|	['ssl_options']	Used to set various SSL options that can be used when making SSL connections.
|	['failover'] array - A array with 0 or more data for connections if the main should fail.
|	['save_queries'] TRUE/FALSE - Whether to "save" all executed queries.
| 				NOTE: Disabling this will also effectively disable both
| 				$this->db->last_query() and profiling of DB queries.
| 				When you run a query, with this setting set to TRUE (default),
| 				CodeIgniter will store the SQL statement for debugging purposes.
| 				However, this may cause high memory usage, especially if you run
| 				a lot of SQL queries ... disable this to avoid that problem.
|
| The $active_group variable lets you choose which connection group to
| make active.  By default there is only one group (the 'default' group).
|
| The $query_builder variables lets you determine whether or not to load
| the query builder class.
*/
$active_group = 'default';
$query_builder = TRUE;

$db['default'] = array(
	'dsn' => '',
	'hostname' => 'localhost',
	'username' => 'root',
	'password' => '',
	'database' => 'myapp',
	'dbdriver' => 'mysqli',
	'dbprefix' => '',
	'pconnect' => FALSE,
	'db_debug' => (ENVIRONMENT !== 'production'),
	'cache_on' => FALSE,
	'cachedir' => '',
	'char_set' => 'utf8',
	'dbcollat' => 'utf8_general_ci',
	'swap_pre' => '',
	'encrypt' => FALSE,
	'compress' => FALSE,
	'stricton' => FALSE,
	'failover' => array(),
	'save_queries' => TRUE
);



==========================================
