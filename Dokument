Menggunakan Library Upload

=====================
perhatian file ini :

1. C:\xampp\htdocs\CodeIgniter\application\config\routes.php
2. C:\xampp\htdocs\CodeIgniter\application\views\upload_form.php
3. C:\xampp\htdocs\CodeIgniter\application\views\upload_success.php
4. C:\xampp\htdocs\CodeIgniter\application\controllers\Upload.php

=======================

testing ada 1 exmple  : 

link nya : 

http://localhost/CodeIgniter/


yg di di ubah ADA 4 FILE : 

1. C:\xampp\htdocs\CodeIgniter\application\config\routes.php

<?php
defined('BASEPATH') or exit('No direct script access allowed');

/*
| -------------------------------------------------------------------------
| URI ROUTING
| -------------------------------------------------------------------------
| This file lets you re-map URI requests to specific controller functions.
|
| Typically there is a one-to-one relationship between a URL string
| and its corresponding controller class/method. The segments in a
| URL normally follow this pattern:
|
|	example.com/class/method/id/
|
| In some instances, however, you may want to remap this relationship
| so that a different class/function is called than the one
| corresponding to the URL.
|
| Please see the user guide for complete details:
|
|	https://codeigniter.com/userguide3/general/routing.html
|
| -------------------------------------------------------------------------
| RESERVED ROUTES
| -------------------------------------------------------------------------
|
| There are three reserved routes:
|
|	$route['default_controller'] = 'welcome';
|
| This route indicates which controller class should be loaded if the
| URI contains no data. In the above example, the "welcome" class
| would be loaded.
|
|	$route['404_override'] = 'errors/page_missing';
|
| This route will tell the Router which controller/method to use if those
| provided in the URL cannot be matched to a valid route.
|
|	$route['translate_uri_dashes'] = FALSE;
|
| This is not exactly a route, but allows you to automatically route
| controller and method names that contain dashes. '-' isn't a valid
| class or method name character, so it requires translation.
| When you set this option to TRUE, it will replace ALL dashes in the
| controller and method URI segments.
|
| Examples:	my-controller/index	-> my_controller/index
|		my-controller/my-method	-> my_controller/my_method
*/

$route['default_controller'] = 'upload';
$route['404_override'] = '';
$route['translate_uri_dashes'] = FALSE;


==================================================================
2. C:\xampp\htdocs\CodeIgniter\application\views\upload_form.php
<html>

<head>
	<title>Upload Form</title>
</head>

<body>

	<?php echo $error; ?>

	<?php echo form_open_multipart('upload/do_upload'); ?>

	<input type="file" name="userfile" size="20" />

	<br /><br />

	<input type="submit" value="upload" />

	</form>

</body>

</html>

======================================================================
3. C:\xampp\htdocs\CodeIgniter\application\views\upload_success.php

<html>

<head>
	<title>Upload Form</title>
</head>

<body>

	<h3>Your file was successfully uploaded!</h3>

	<ul>
		<?php foreach ($upload_data as $item => $value): ?>
			<li><?php echo $item; ?>: <?php echo $value; ?></li>
		<?php endforeach; ?>
	</ul>

	<p><?php echo anchor('upload', 'Upload Another File!'); ?></p>

</body>

</html>
===================================================================
4. C:\xampp\htdocs\CodeIgniter\application\controllers\Upload.php

<?php
defined('BASEPATH') or exit('No direct script access allowed');

class Upload extends CI_Controller
{

	public function __construct()
	{
		parent::__construct();
		$this->load->helper(array('form', 'url'));
	}

	public function index()
	{
		$this->load->view('upload_form', array('error' => ' '));
	}

	public function do_upload()
	{
		$config['upload_path'] = './uploads/';
		$config['allowed_types'] = 'gif|jpg|png';
		$config['max_size'] = 100;
		$config['max_width'] = 1024;
		$config['max_height'] = 768;

		$this->load->library('upload', $config);

		if (!$this->upload->do_upload('userfile')) {
			$error = array('error' => $this->upload->display_errors());

			$this->load->view('upload_form', $error);
		} else {
			$data = array('upload_data' => $this->upload->data());

			$this->load->view('upload_success', $data);
		}
	}
}
?>
===========================================================================
